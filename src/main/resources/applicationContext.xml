<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Define the other the old-fashioned way, with 'ignoreUnresolvablePlaceholders' set to TRUE -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="properties">
        <property name="locations">
            <list>
                <value>classpath*:META-INF/application.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>


    <!--
  topic: String,
  brokerList: String,
     clientId: String = UUID.randomUUID().toString,
     synchronously: Boolean = true,
     compress: Boolean = true,
     batchSize: Integer = 200,
     messageSendMaxRetries: Integer = 3,
  requestRequiredAcks: Integer = -1
 -->
    <bean class="io.criticality.cookbook.scala.kafka.KafkaProducer" id="recordProducer">
        <constructor-arg type="java.lang.String" value="records"/>
        <constructor-arg type="java.lang.String" value="${broker}"/>
        <constructor-arg type="java.lang.String" value="importer"/>
    </bean>

    <context:annotation-config/>
    <context:component-scan base-package="io.criticality.app" />


</beans>